@page "{id}"
@model NOVAAPP.Pages.Proformas.ObservarModel
@{
    ViewData["Title"] = "Proformas";
    NumberFormatInfo formato = new CultureInfo("es-CR").NumberFormat;
    formato.CurrencySymbol = "";
    formato.CurrencyGroupSeparator = ",";
    formato.NumberDecimalSeparator = ".";
}
@using Microsoft.AspNetCore.Http
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Security.Claims;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.Extensions.Configuration;
@using Refit;
@using Sicsoft.Checkin.Web.Models;
@inject IHttpContextAccessor httpContextAccessor
@{
    var Roles = ((ClaimsIdentity)User.Identity).Claims.Where(d => d.Type == "Roles").Select(s1 => s1.Value).FirstOrDefault().Split("|");
    var CodSuc = ((ClaimsIdentity)User.Identity).Claims.Where(d => d.Type == "CodSuc").Select(s1 => s1.Value).FirstOrDefault();
}
@section styles{


}
@section scripts{
    <script>
        $(document).ready(function () {
            jQuery(document).ready(function ($) {

            });



            $(document).ready(function () {

            });


        });

        function ImprimirPantalla() {
            try {
                // window.print();
                var margins = {
                    top: 10,
                    bottom: 10,
                    left: 10,
                    width: 595
                };


                html = $(".html").html();
                html2pdf(html, {
                    margin: 1,
                    padding: 0,
                    filename: 'Proforma.pdf',
                    image: { type: 'jpeg', quality: 1 },
                    html2canvas: { scale: 2, logging: true },
                    jsPDF: { unit: 'in', format: 'A2', orientation: 'P' },
                    class: ImprimirPantalla
                });

            } catch (e) {
                console.log(e);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar imprimir ' + e

                })
            }
        }

        function ImprimirDescuento() {
            try {
                // window.print();
                var margins = {
                    top: 10,
                    bottom: 10,
                    left: 10,
                    width: 595
                };


                html2 = $(".html2").html();
                html2pdf(html2, {
                    margin: 1,
                    padding: 0,
                    filename: 'Proforma.pdf',
                    image: { type: 'jpeg', quality: 1 },
                    html2canvas: { scale: 2, logging: true },
                    jsPDF: { unit: 'in', format: 'A2', orientation: 'P' },
                    class: ImprimirDescuento
                });

            } catch (e) {
                console.log(e);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar imprimir ' + e

                })
            }
        }

        function ImprimirTotales() {
            try {
                // window.print();
                var margins = {
                    top: 10,
                    bottom: 10,
                    left: 10,
                    width: 595
                };


                html2 = $(".html3").html();
                html2pdf(html2, {
                    margin: 1,
                    padding: 0,
                    filename: 'Proforma.pdf',
                    image: { type: 'jpeg', quality: 1 },
                    html2canvas: { scale: 2, logging: true },
                    jsPDF: { unit: 'in', format: 'A2', orientation: 'P' },
                    class: ImprimirDescuento
                });

            } catch (e) {
                console.log(e);
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'Ha ocurrido un error al intentar imprimir ' + e

                })
            }
        }


    </script>
}


@using Newtonsoft.Json;
@using System.Globalization
<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Proformas
    </h1>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="ti-dashboard"></i></a></li>
        <li class="breadcrumb-item active">Observar Proforma</li>
    </ol>
</section>

<section class="content ">
    <div class="row">
        <div class="col-12">

            <div class="box">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-8">
                            <h6 class="box-subtitle">Observar Proforma</h6>


                        </div>
                        <div class="col-4">
                            <a asp-page="./Index" class="nav-link text-dark" style="text-decoration: underline;"><i class="ti-back-left "></i>  Regresar</a>

                            &nbsp;



                        </div>
                    </div>
                </div>
                <div class="box-body">

                    <!-- title row -->
                    <div class="row">

                        <div class="col-md-12">
                            <div class="page-header mt-0">
                                <h2 class="d-inline"><span class="font-size-24">Proforma No: @Model.Oferta.id</span></h2>
                                <br />
                                <div class="text-left">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <h5> <b>Fecha</b> @Model.Oferta.Fecha.ToString("dd/MM/yyyy")</h5>

                                        </div>

                                        <div class="col-md-4">
                                            <h5> <b>Fecha de Vencimiento</b> @Model.Oferta.FechaVencimiento.ToString("dd/MM/yyyy")</h5>

                                        </div>

                                        <div class="col-md-4">
                                            <h5> <b>Vendedor: </b> @(Model.Vendedor.Nombre)</h5>

                                        </div>
                                        <br />
                                        <br />
                                        <br />
                                        <div class="col-md-3">
                                            <h5>
                                                <b>Estado:</b>@if (Model.Oferta.Status == "0")
                                                {
                                                    <span class="badge badge-pill badge-success">Abierto</span>

                                                }
                                                else
                                                {
                                                    <span class="badge badge-pill badge-danger">Cerrado</span>
                                                }
                                            </h5>

                                        </div>


                                        <div class="col-md-3">
                                            <h5>
                                                <b>Tipo de Documento:</b>  @switch (Model.Oferta.TipoDocumento)
                                                {
                                                    case "01":
                                                        {
                                                            <p>Factura Electrónica</p>
                                                            break;
                                                        }
                                                    case "03":
                                                        {
                                                            <p>Nota de Crédito</p>
                                                            break;
                                                        }
                                                    case "04":
                                                        {
                                                            <p>Tiquete Electrónico</p>
                                                            break;
                                                        }
                                                }
                                            </h5>

                                        </div>

                                        <div class="col-md-3">
                                            <h5> <b>Moneda</b> @Model.Oferta.Moneda</h5>

                                        </div>

                                        <div class="col-md-3">
                                            <h5> <b>Cond.Pago: </b> @(Model.CondicionesPago.Nombre)</h5>

                                        </div>





                                    </div>





                                </div>
                            </div>
                        </div>
                        <!-- /.col -->
                    </div>


                    <!-- info row -->
                    <div class="row invoice-info">
                        <div class="col-md-8 invoice-col">
                            <strong>Cliente</strong>
                            <address>
                                <strong class="text-blue font-size-24"> @(Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault() == null ? "Cliente Inexistente" : Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault().Codigo + " - " + Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault().Nombre)   </strong>


                            </address>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                    <!-- Table row -->
                    <div class="row">
                        <div class="col-12 table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr class="bg-pale-info">
                                        <th class="text-center">#</th>
                                        <th class="text-center">Producto</th>
                                        <th class="text-center">Cantidad</th>
                                        <th class="text-center">Precio Unitario</th>
                                        <th class="text-center">% Descuento</th>
                                        <th class="text-center">Descuento</th>
                                        <th class="text-center">Impuesto</th>
                                        <th class="text-center">% Exoneración</th>


                                        <th class="text-center">Total</th>
                                        @if (!string.IsNullOrEmpty(Roles.Where(a => a == "53").FirstOrDefault()))
                                        {
                                            <th class="text-center">% Ganancia</th>
                                        }

                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in Model.Oferta.Detalle)
                                    {
                                        <tr>
                                            <td>@item.NumLinea</td>


                                            <td>  @(Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault() == null ? "Producto Inexistente" : Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault().Codigo + " - " + @item.NomPro)   </td>

                                            <td class="text-right">@(Math.Round(item.Cantidad))</td>


                                            <td class="text-center">@Math.Round(item.PrecioUnitario,2).ToString("C",formato)</td>
                                            <td class="text-center">@Math.Round(@item.PorDescto)%</td>
                                            <td class="text-center">@Math.Round(@item.Descuento,2).ToString("C",formato)</td>
                                            <td class="text-center">@Math.Round(@item.TotalImpuesto,2).ToString("C",formato)</td>
                                            <td class="text-center">@(Model.Exoneraciones.Where(a => a.id == @item.idExoneracion).FirstOrDefault() == null ? "0" : Model.Exoneraciones.Where(a => a.id == @item.idExoneracion).FirstOrDefault().PorExon.ToString()) %</td>
                                            <td class="text-center">@Math.Round(@item.TotalLinea,2).ToString("C",formato)</td>
                                            @if (!string.IsNullOrEmpty(Roles.Where(a => a == "53").FirstOrDefault()))
                                            {

                                                <td class="text-center">@Math.Round(((((@item.TotalLinea - @item.TotalImpuesto) - ( (Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault() == null ? 0: Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault().Costo) * item.Cantidad)) / (@item.TotalLinea - @item.TotalImpuesto)) * 100) ,2).ToString("C",formato)%</td>
                                            }
                                        </tr>
                                    }


                                </tbody>
                            </table>
                        </div>
                        <!-- /.col -->
                        <div class="col-12  text-right">


                            <div>
                                <p>Sub Total  : <span> @Math.Round(Model.Oferta.Subtotal, 2).ToString("C",formato)</span> </p>
                                <p>Descuento  : <span> @Math.Round(Model.Oferta.TotalDescuento, 2).ToString("C",formato)</span></p>
                                <p>Impuesto :  <span>  @Math.Round(Model.Oferta.TotalImpuestos, 2).ToString("C",formato)</span></p>

                            </div>
                            <div class="total-payment">
                                <h3><b>Total :</b>  <span>  @Math.Round(Model.Oferta.TotalCompra, 2).ToString("C",formato)</span></h3>
                            </div>

                        </div>
                    </div>
                    <!-- /.row -->
                    <!-- /.row -->

                </div>
            </div>


            <!-- Default box -->
            <div class="col-6 box">
                <div class="col-6 box-header with-border">
                    <h4 class="box-title">Comentarios</h4>
                </div>
                <div class="box-body">
                    <td>@Model.Oferta.Comentarios</td>

                    <!-- /.box-body -->
                </div>




            </div>

        </div>


    </div>


    <button id="print" class="btn btn-warning" type="button" onclick="javascript: ImprimirPantalla()"> <span><i class="fa fa-print"></i> Imprimir</span> </button>
    &nbsp
    &nbsp

    <button id="print2" class="btn btn-info" type="button" onclick="javascript: ImprimirDescuento()"> <span><i class="fa fa-print"></i> Imprimir  <del>Descuento</del></span> </button>

    &nbsp
    &nbsp


    <button id="print3" class="btn btn-info" type="button" onclick="javascript: ImprimirTotales()"> <span><i class="fa fa-print"></i> Imprimir  <del>Precios</del></span> </button>
</section>



<div class="html" hidden>
    <div class="row">
        <div class="col-12">

            <div class="box">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-8">
                            <h6 class="box-subtitle">Proforma</h6>


                        </div>
                        <div class="col-4">
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <!-- title row -->
                    <div class="row">

                        <div class="col-md-6">
                            <img id="base64image" style="width: 85%;"
                                 src="data:image/jpeg;base64,@Model.MiSucursal.Imagen.ToString()" />
                        </div>
                        <div class="col-md-6">
                            <div style=" font-weight: bold;  font-size: 15px;">
                                <p style="  font-size: 20px !important; ">@Model.NombreCliente</p>
                                <p style="  font-size: 20px !important; ">@Model.MiSucursal.Nombre</p>
                                <p>Cedula Juridica:  @Model.MiSucursal.Cedula</p>
                                <p>Telefax: @Model.MiSucursal.Telefono</p>

                                <p>Email: @Model.MiSucursal.Correo</p>

                                <p> @Model.MiSucursal.Sennas   </p>


                            </div>
                        </div>

                        <div class="col-12">
                            <div class="page-header mt-0">
                                <h2 class="d-inline"><span class="font-size-24">Proforma No: @Model.Oferta.id</span></h2>
                                <br />
                                <div class="text-left">
                                    <div class="row">
                                        <div class="col-4">
                                            <h5> <b>Fecha</b> @Model.Oferta.Fecha.ToString("dd/MM/yyyy")</h5>

                                        </div>
                                        Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault().Codigo

                                        <div class="col-4">
                                            <h5> <b>Fecha de Vencimiento</b> @Model.Oferta.FechaVencimiento.ToString("dd/MM/yyyy")</h5>

                                        </div>

                                        <div class="col-4">
                                            <h5> <b>Vendedor: </b> @(Model.Vendedor.Nombre)</h5>

                                        </div>
                                        <br />
                                        <br />
                                        <br />



                                        <div class="col-3">
                                            <h5>
                                                <b>Tipo de Documento:</b>  @switch (Model.Oferta.TipoDocumento)
                                                {
                                                    case "01":
                                                        {
                                                            <p>Factura Electrónica</p>
                                                            break;
                                                        }
                                                    case "03":
                                                        {
                                                            <p>Nota de Crédito</p>
                                                            break;
                                                        }
                                                    case "04":
                                                        {
                                                            <p>Tiquete Electrónico</p>
                                                            break;
                                                        }
                                                }
                                            </h5>

                                        </div>

                                        <div class="col-3">
                                            <h5> <b>Moneda</b> @Model.Oferta.Moneda</h5>

                                        </div>

                                        <div class="col-3">
                                            <h5> <b>Cond.Pago: </b> @(Model.CondicionesPago.Nombre)</h5>

                                        </div>





                                    </div>





                                </div>
                            </div>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- info row -->
                    <div class="row invoice-info">
                        <div class="col-md-8 invoice-col">
                            <strong>Cliente</strong>
                            <address>
                                <strong class="text-blue font-size-24">   @(Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault() == null ? "Cliente Inexistente" : Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault().Codigo + " - " + Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault().Nombre)</strong>


                            </address>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                    <!-- Table row -->
                    <div class="row">
                        <div class="col-12 table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr class="bg-pale-info">
                                        <th class="text-center">#</th>
                                        <th class="text-center">Producto</th>
                                        <th class="text-center">Cantidad</th>
                                        <th class="text-center">Precio Unitario</th>
                                        @* <th class="text-center">% Descuento</th>*@
                                        @*   <th class="text-center">Descuento</th>*@
                                        <th class="text-center">Impuesto</th>
                                        @*  <th class="text-center">% Exoneración</th>*@

                                        <th class="text-center">Total</th>


                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in Model.Oferta.Detalle)
                                    {
                                        <tr>
                                            <td>@item.NumLinea</td>


                                            <td>  @(Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault() == null ? "Producto Inexistente" : Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault().Codigo + " - " + @item.NomPro)   </td>

                                            <td class="text-right">@(Math.Round(item.Cantidad))</td>


                                            <td class="text-center">@Math.Round(item.PrecioUnitario, 2).ToString("C", formato)</td>
                                            @*       <td class="text-center">@Math.Round(@item.PorDescto) %</td>
                                        <td class="text-center">@Math.Round(@item.Descuento, 2).ToString("C", formato)</td>*@
                                            <td class="text-center">@Math.Round(@item.TotalImpuesto, 2).ToString("C", formato)</td>
                                            @* <td class="text-center">@( Model.Exoneraciones.Where(a => a.id == @item.idExoneracion).FirstOrDefault() == null ? "0" :  Model.Exoneraciones.Where(a => a.id == @item.idExoneracion).FirstOrDefault().PorExon.ToString()) %</td>*@

                                            <td class="text-center">@Math.Round(@item.TotalLinea, 2).ToString("C", formato)</td>


                                        </tr>
                                    }


                                </tbody>
                            </table>
                        </div>
                        <!-- /.col -->
                        <div class="col-12  text-right">


                            <div>

                                <p>Sub Total  :  <span id="Subtotal"> @Math.Round(Model.Oferta.Subtotal, 2).ToString("C",formato)</span> </p>
                                @*<p>Descuento  :  <span id="Descuento"> @Math.Round(Model.Oferta.TotalDescuento, 2).ToString("C",formato)</span></p>*@
                                <p>Impuesto :  <span>  @Math.Round(Model.Oferta.TotalImpuestos, 2).ToString("C",formato)</span></p>

                            </div>
                            <div class="total-payment">
                                <h3><b>Total :</b>  <span>  @Math.Round(Model.Oferta.TotalCompra, 2).ToString("C",formato)</span></h3>
                            </div>

                        </div>
                    </div>
                    <!-- /.row -->
                    <!-- /.row -->

                </div>
            </div>


            <!-- Default box -->
            <div class="col-6 box">
                <div class="col-6 box-header with-border">
                    <h4 class="box-title">Comentarios</h4>
                </div>
                <div class="box-body">
                    <span>@Model.Oferta.Comentarios</span>

                    <!-- /.box-body -->
                </div>




            </div>

        </div>
        <div class="col-md-6">
            <div style="   font-size: 17px;">
                <b style="  font-size: 22px !important; ">CUENTAS COLONES</b>
                <p><b>BANCO DE COSTA RICA:</b> CR51015201345000128153</p>
                <p><b>BANCO NACIONAL:</b> CR55015109210010004595</p>
                <p><b>BAC SAN JOSÉ:</b>  CR64010200009326955703</p>
                <p><b>BANCO POPULAR:</b>  CR70016111006152606645</p>
                <p><b>SINPE MOVIL BNCR:</b>  8770-2222</p>
                <p><b>SINPE MOVIL BCR:</b> 8770-2221</p>


            </div>
        </div>

        <div class="col-md-4">
            <div style="  font-size: 17px;">
                <b style="  font-size: 22px !important; ">CUENTAS DÓLARES</b>
                <p> <b>BANCO DE COSTA RICA:</b> CR62015201345000147451</p>
                <p><b>BANCO NACIONAL</b>: CR67015105810026000819</p>
                <p><b>BAC SAN JOSÉ</b>: CR71010200009487514827</p>


            </div>
        </div>
    </div>
</div>


<div class="html2" hidden>
    <div class="row">
        <div class="col-12">

            <div class="box">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-8">
                            <h6 class="box-subtitle">Proforma</h6>


                        </div>
                        <div class="col-4">
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <!-- title row -->
                    <div class="row">

                        <div class="col-md-6">
                            <img id="base64image" style="width: 85%;"
                                 src="data:image/jpeg;base64,@Model.MiSucursal.Imagen.ToString()" />
                        </div>
                        <div class="col-md-6">
                            <div style=" font-weight: bold;  font-size: 15px;">
                                <p style="  font-size: 20px !important; ">@Model.NombreCliente</p>
                                <p style="  font-size: 20px !important; ">@Model.MiSucursal.Nombre</p>
                                <p>Cedula Juridica:  @Model.MiSucursal.Cedula</p>
                                <p>Telefax: @Model.MiSucursal.Telefono</p>

                                <p>Email: @Model.MiSucursal.Correo</p>

                                <p> @Model.MiSucursal.Sennas   </p>


                            </div>
                        </div>

                        <div class="col-12">
                            <div class="page-header mt-0">
                                <h2 class="d-inline"><span class="font-size-24">Proforma No: @Model.Oferta.id</span></h2>
                                <br />
                                <div class="text-left">
                                    <div class="row">
                                        <div class="col-4">
                                            <h5> <b>Fecha</b> @Model.Oferta.Fecha.ToString("dd/MM/yyyy")</h5>

                                        </div>

                                        <div class="col-4">
                                            <h5> <b>Fecha de Vencimiento</b> @Model.Oferta.FechaVencimiento.ToString("dd/MM/yyyy")</h5>

                                        </div>

                                        <div class="col-4">
                                            <h5> <b>Vendedor: </b> @(Model.Vendedor.Nombre)</h5>

                                        </div>
                                        <br />
                                        <br />
                                        <br />



                                        <div class="col-3">
                                            <h5>
                                                <b>Tipo de Documento:</b>  @switch (Model.Oferta.TipoDocumento)
                                                {
                                                    case "01":
                                                        {
                                                            <p>Factura Electrónica</p>
                                                            break;
                                                        }
                                                    case "03":
                                                        {
                                                            <p>Nota de Crédito</p>
                                                            break;
                                                        }
                                                    case "04":
                                                        {
                                                            <p>Tiquete Electrónico</p>
                                                            break;
                                                        }
                                                }
                                            </h5>

                                        </div>

                                        <div class="col-3">
                                            <h5> <b>Moneda</b> @Model.Oferta.Moneda</h5>

                                        </div>

                                        <div class="col-3">
                                            <h5> <b>Cond.Pago: </b> @(Model.CondicionesPago.Nombre)</h5>

                                        </div>





                                    </div>





                                </div>
                            </div>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- info row -->
                    <div class="row invoice-info">
                        <div class="col-md-8 invoice-col">
                            <strong>Cliente</strong>
                            <address>
                                <strong class="text-blue font-size-24">   @(Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault() == null ? "Cliente Inexistente" : Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault().Codigo + " - " + Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault().Nombre)</strong>


                            </address>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                    <!-- Table row -->
                    <div class="row">
                        <div class="col-12 table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr class="bg-pale-info">
                                        <th class="text-center">#</th>
                                        <th class="text-center">Producto</th>
                                        <th class="text-center">Cantidad</th>
                                        <th class="text-center">Precio Unitario</th>

                                        <th class="text-center">Impuesto</th>
                                        @*  <th class="text-center">% Exoneración</th>*@

                                        <th class="text-center">Total</th>

                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in Model.Oferta.Detalle)
                                    {
                                        <tr>
                                            <td>@item.NumLinea</td>


                                            <td>  @(Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault() == null ? "Producto Inexistente" : Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault().Codigo + " - " + Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault().Nombre)   </td>

                                            <td class="text-right">@(Math.Round(item.Cantidad))</td>


                                            <td class="text-center">@Math.Round(item.PrecioUnitario, 2).ToString("C", formato)</td>

                                            <td class="text-center">@Math.Round(@item.TotalImpuesto, 2).ToString("C", formato)</td>
                                            @*  <td class="text-center">@( Model.Exoneraciones.Where(a => a.id == @item.idExoneracion).FirstOrDefault() == null ? "0" :  Model.Exoneraciones.Where(a => a.id == @item.idExoneracion).FirstOrDefault().PorExon.ToString()) %</td>*@

                                            <td class="text-center">@Math.Round(@item.TotalLinea, 2).ToString("C", formato)</td>

                                        </tr>
                                    }


                                </tbody>
                            </table>
                        </div>
                        <!-- /.col -->
                        <div class="col-12  text-right">


                            <div>
                                <p>Sub Total  :  <span> @Math.Round((Model.Oferta.Subtotal - Model.Oferta.TotalDescuento) , 2).ToString("C",formato)</span> </p>


                                <p>Impuesto :  <span>  @Math.Round(Model.Oferta.TotalImpuestos, 2).ToString("C",formato)</span></p>

                            </div>
                            <div class="total-payment">
                                <h3><b>Total :</b>  <span>  @Math.Round(Model.Oferta.TotalCompra, 2).ToString("C",formato)</span></h3>
                            </div>

                        </div>
                    </div>
                    <!-- /.row -->
                    <!-- /.row -->

                </div>
            </div>


            <!-- Default box -->
            <div class="col-6 box">
                <div class="col-6 box-header with-border">
                    <h4 class="box-title">Comentarios</h4>
                </div>
                <div class="box-body">
                    <span>@Model.Oferta.Comentarios</span>

                    <!-- /.box-body -->
                </div>




            </div>
        </div>
        <div class="col-md-6">
            <div style="   font-size: 17px;">
                <b style="  font-size: 22px !important; ">CUENTAS COLONES</b>
                <p><b>BANCO DE COSTA RICA:</b> CR51015201345000128153</p>
                <p><b>BANCO NACIONAL:</b>  CR55015109210010004595</p>
                <p><b>BAC SAN JOSÉ:</b>  CR64010200009326955703</p>
                <p><b>BANCO POPULAR:</b>  CR70016111006152606645</p>
                <p><b>SINPE MOVIL BNCR:</b>  8770-2222</p>
                <p><b>SINPE MOVIL BCR:</b> 8770-2221</p>


            </div>
        </div>

        <div class="col-md-4">
            <div style="  font-size: 17px;">
                <b style="  font-size: 22px !important; ">CUENTAS DÓLARES</b>
                <p> <b>BANCO DE COSTA RICA:</b> CR62015201345000147451</p>
                <p><b>BANCO NACIONAL</b>: CR67015105810026000819</p>
                <p><b>BAC SAN JOSÉ</b>: CR71010200009487514827</p>

            </div>
        </div>
    </div>
</div>


<div class="html3" hidden>
    <div class="row">

        <div class="col-md-6">
            <img id="base64image" style="width: 85%;"
                 src="data:image/jpeg;base64,@Model.MiSucursal.Imagen.ToString()" />
        </div>
        <div class="col-md-6">
            <div style=" font-weight: bold;  font-size: 15px;">
                <p style="  font-size: 20px !important; ">@Model.NombreCliente</p>
                <p style="  font-size: 20px !important; ">@Model.MiSucursal.Nombre</p>
                <p>Cedula Juridica:  @Model.MiSucursal.Cedula</p>
                <p>Telefax: @Model.MiSucursal.Telefono</p>

                <p>Email: @Model.MiSucursal.Correo</p>

                <p> @Model.MiSucursal.Sennas   </p>


            </div>
        </div>

        <div class="col-12">

            <div class="box">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-8">
                            <h6 class="box-subtitle">Proforma</h6>


                        </div>
                        <div class="col-4">
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <!-- title row -->
                    <div class="row">
                        <div class="col-12">
                            <div class="page-header mt-0">
                                <h2 class="d-inline"><span class="font-size-24">Proforma No: @Model.Oferta.id</span></h2>
                                <br />
                                <div class="text-left">
                                    <div class="row">
                                        <div class="col-4">
                                            <h5> <b>Fecha</b> @Model.Oferta.Fecha.ToString("dd/MM/yyyy")</h5>

                                        </div>

                                        <div class="col-4">
                                            <h5> <b>Fecha de Vencimiento</b> @Model.Oferta.FechaVencimiento.ToString("dd/MM/yyyy")</h5>

                                        </div>

                                        <div class="col-4">
                                            <h5> <b>Vendedor: </b> @(Model.Vendedor.Nombre)</h5>

                                        </div>
                                        <br />
                                        <br />
                                        <br />



                                        <div class="col-3">
                                            <h5>
                                                <b>Tipo de Documento:</b>  @switch (Model.Oferta.TipoDocumento)
                                                {
                                                    case "01":
                                                        {
                                                            <p>Factura Electrónica</p>
                                                            break;
                                                        }
                                                    case "03":
                                                        {
                                                            <p>Nota de Crédito</p>
                                                            break;
                                                        }
                                                    case "04":
                                                        {
                                                            <p>Tiquete Electrónico</p>
                                                            break;
                                                        }
                                                }
                                            </h5>

                                        </div>

                                        <div class="col-3">
                                            <h5> <b>Moneda</b> @Model.Oferta.Moneda</h5>

                                        </div>

                                        <div class="col-3">
                                            <h5> <b>Cond.Pago: </b> @(Model.CondicionesPago.Nombre)</h5>

                                        </div>





                                    </div>





                                </div>
                            </div>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- info row -->
                    <div class="row invoice-info">
                        <div class="col-md-8 invoice-col">
                            <strong>Cliente</strong>
                            <address>
                                <strong class="text-blue font-size-24">   @(Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault() == null ? "Cliente Inexistente" : Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault().Codigo + " - " + Model.Clientes.Where(a => a.id == Model.Oferta.idCliente).FirstOrDefault().Nombre)</strong>


                            </address>
                        </div>
                        <!-- /.col -->
                    </div>
                    <!-- /.row -->
                    <!-- Table row -->
                    <div class="row">
                        <div class="col-12 table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr class="bg-pale-info">
                                        <th class="text-center">#</th>
                                        <th class="text-center">Producto</th>
                                        <th class="text-center">Cantidad</th>





                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in Model.Oferta.Detalle)
                                    {
                                        <tr>
                                            <td>@item.NumLinea</td>


                                            <td>  @(Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault() == null ? "Producto Inexistente" : Model.Productos.Where(a => a.id == item.idProducto).FirstOrDefault().Codigo + " - " + @item.NomPro)   </td>

                                            <td class="text-right">@(Math.Round(item.Cantidad))</td>




                                        </tr>
                                    }


                                </tbody>
                            </table>
                        </div>
                        <!-- /.col -->
                        <div class="col-12  text-right">


                            <div>
                                <p>Sub Total  :  <span> @Math.Round((Model.Oferta.Subtotal - Model.Oferta.TotalDescuento) , 2).ToString("C",formato)</span> </p>


                                <p>Impuesto :  <span>  @Math.Round(Model.Oferta.TotalImpuestos, 2).ToString("C",formato)</span></p>

                            </div>
                            <div class="total-payment">
                                <h3><b>Total :</b>  <span>  @Math.Round(Model.Oferta.TotalCompra, 2).ToString("C",formato)</span></h3>
                            </div>

                        </div>
                    </div>
                    <!-- /.row -->
                    <!-- /.row -->

                </div>
            </div>


            <!-- Default box -->
            <div class="col-6 box">
                <div class="col-6 box-header with-border">
                    <h4 class="box-title">Comentarios</h4>
                </div>
                <div class="box-body">
                    <span>@Model.Oferta.Comentarios</span>

                    <!-- /.box-body -->
                </div>




            </div>
        </div>
        <div class="col-md-6">
            <div style="   font-size: 17px;">
                <b style="  font-size: 22px !important; ">CUENTAS COLONES</b>
                <p><b>BANCO DE COSTA RICA:</b> CR51015201345000128153</p>
                <p><b>BANCO NACIONAL:</b>  CR55015109210010004595</p>
                <p><b>BAC SAN JOSÉ:</b>  CR64010200009326955703</p>
                <p><b>BANCO POPULAR:</b>  CR70016111006152606645</p>
                <p><b>SINPE MOVIL BNCR:</b>  8770-2222</p>
                <p><b>SINPE MOVIL BCR:</b> 8770-2221</p>


            </div>
        </div>

        <div class="col-md-4">
            <div style="  font-size: 17px;">
                <b style="  font-size: 22px !important; ">CUENTAS DÓLARES</b>
                <p> <b>BANCO DE COSTA RICA:</b> CR62015201345000147451</p>
                <p><b>BANCO NACIONAL</b>: CR67015105810026000819</p>
                <p><b>BAC SAN JOSÉ</b>: CR71010200009487514827</p>


            </div>
        </div>
    </div>
</div>