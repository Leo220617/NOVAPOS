@page
@model NOVAAPP.Pages.Cajas.IndexModel
@{
    ViewData["Title"] = "Cajas";

}



@section styles{


}

@section scripts{

    <script>
        $(document).ready(function () {
            jQuery(document).ready(function ($) {
                $(document).ready(function () {
                    $('.mi-selector').select2();
                });
            });
            $(".js-example-responsive").select2({
                width: 'resolve',// need to override the changed default
                height: 'resolve'
            });

          



        });

         var ids = 0;
    function onClickModal(id) {
        ids = id;
        Swal.fire({
            title: '¿Desea eliminar esta Caja?',
            showDenyButton: true,
            showCancelButton: false,
            confirmButtonText: `Aceptar`,
            denyButtonText: `Cancelar`,
            customClass: {
                confirmButton: 'swalBtnColor',
                denyButton: 'swalDeny'
            },
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {

                Eliminar();

            }
        })

    }
        function  Eliminar() {

         $.ajax({
                        type: 'GET',
                        dataType: 'json',
                        url: '@Url.Page("Index", "Eliminar")',
                        data: { id: ids },
                        success: function (result) {

                             if (result == false) {
                                 ids = 0;
                                 Swal.fire({
                                     icon: 'error',
                                     title: 'Oops...',
                                     text: 'Ha ocurrido un error al intentar eliminar'

                                 })

                             } else {
                                 Swal.fire({
                                     title: "Ha sido eliminado con éxito",

                                     icon: 'success',
                                     showCancelButton: false,
                                     customClass: {
                                         confirmButton: 'swalBtnColor',

                                     },
                                     confirmButtonText: 'OK'
                                 }).then((result) => {
                                     if (result.isConfirmed) {
                                         location.reload();
                                     }
                                 })
                             }
             },
             beforeSend: function () {

             }
                     })
        }



    </script>

}

      

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Cajas
    </h1>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#"><i class="ti-dashboard"></i></a></li>
        <li class="breadcrumb-item active">Listado Cajas</li>
    </ol>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-12">


            <div class="box">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-8"> <h4 class="box-title">Cajas</h4></div>
                          <div class="col-sm-4"> <a asp-page="Nuevo" style="color: #57b846;" title="Agregar"><i class="fa fa-plus"></i> Agregar Caja</a></div>
                      

                    </div>


                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div class="table-responsive">
                        <table id="example1" class="table table-bordered table-striped">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Sucursal</th> 

                                    <th>Nombre</th>
                                    <th>Acción</th>

                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Objeto)
                                {
                                <tr>

                                    <td>
                                        @item.id
                                    </td>

                                     <td>  @( Model.SucursalesLista.Where(a => a.CodSuc == item.CodSuc).FirstOrDefault() == null ? "Sucursal Inexistente" :  Model.SucursalesLista.Where(a => a.CodSuc == item.CodSuc).FirstOrDefault().Nombre) </td>  
                                    <td>         @item.Nombre </td>
                                 <td align="center" style="padding-top:15px;">
                                            <a asp-page="./Editar" asp-route-id="@item.id" class="fa fa-edit icono"> </a> 
                                            &nbsp;
                                            <a onclick="javascript: onClickModal('@item.id')" class="fa fa-trash icono"></a>
                                            &nbsp;
                                            
                                     </td>


                                </tr>

                                }


                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>ID</th>
                                    <th>Sucursal</th> 
                                    <th>Nombre</th>
                                     <th>Acción</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->

